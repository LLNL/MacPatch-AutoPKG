#!/bin/bash

# This function works with version numbers with up to 4 "."s and up to 4 digits in each
# Example: 3.2000.3000.4000
function version {
	#the double "at sign" below is because MacPatch uses it as a delimiter
	echo "$@@" | awk -F. '{ printf("%d%04d%04d%06d\n", $1,$2,$3,$4); }';
}

newVer="#version#"

# check if at lest one 1.8 jdk exists
count=`ls -1 /Library/Java/JavaVirtualMachines/jdk1.8.0*.jdk 2>/dev/null | wc -l`
if [ $count -gt 0 ]; then
	# get installed java version
	installedVer=`java -version 2>&1 | grep version | awk -F\" '{print $2}'`
	# replace "_" with "."
	installedVer=${installedVer/_/.}
	
	if [ $(version $installedVer) -ge $(version "1.8.0.0") -a $(version $installedVer) -lt $(version $newVer) ]; then
		echo "Java 1.8 is installed and is older, we DO need the patch"
		exit 0
	elif [ $(version $installedVer) -lt $(version "1.7.0.0") ]; then
		echo "Found Java 1.6 to be default, we DONT need the patch"
		exit 1
	else
		echo "Java 1.8 is installed but is the same or newer, we DONT need the patch"
		exit 1
	fi
fi

echo "Java 1.8 is not installed"

exit 1
